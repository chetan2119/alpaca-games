@media screen and (max-width: 700px) {
	/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
	/* Force table to not be like tables anymore */
	table, thead, tbody, th, td, tr {
		display: block;
	}

	/* Hide table headers (but not display: none;, for accessibility) */
	thead tr {
		position: absolute;
		top: -9999px;
		left: -9999px;
	}
	tr {
		margin: 0 0 70px 0;
		height: 0 0 20px 0;
		
	}
	#viewUserDeleteButton {
		display: block;
		width: 100%;
		border: none;
		
		padding:  ;
		font-size: 16px;
		cursor: pointer;
		text-align: center;
	}
	 
	#viewGameEditButton {
		
		width: 40%;
		border: none;
		
		margin: 29px 0 0 0;
		font-size: 16px;
		cursor: pointer;
		text-align: center;
	}
	#viewGameDeleteButton {
		
		width: 40%;
		border: none;
		position: absolute;
		margin: 11px 0 0 0;
		font-size: 16px;
		cursor: pointer;
		text-align: center;
	}
	
	td {
		/* Behave  like a "row" */
		border: none;
		border-top: 1px solid #eee;
		position: relative;
		padding-left: 60%;
		text-align: left;
	}
	td:before {
		/* Now like a table header */
		position: absolute;
		/* Top/left values mimic padding */
		top: 10px;
		left: 8px;
		width: 35%;
		padding-right: 10px;
		white-space: nowrap;
		
	}
	
	td span{
			
	}
	
	/*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
	.viewOrdersTable td:nth-of-type(1):before {
		content: "Order ID";
	}
	.viewOrdersTable td:nth-of-type(2):before {
		content: "User ID";
	}
	.viewOrdersTable td:nth-of-type(3):before {
		content: "Game ID";
	}
	.viewOrdersTable td:nth-of-type(4):before {
		content: "Bill Amount";
	}
	.viewOrdersTable td:nth-of-type(5):before {
		content: "Delivery Status";
	}
	.viewOrdersTable td:nth-of-type(6):before {
		content: "Order Date";
	}
	.viewUsersTable td:nth-of-type(1):before {
		content: "User ID";
	}
	.viewUsersTable td:nth-of-type(2):before {
		content: "Username";
	}
	.viewUsersTable td:nth-of-type(3):before {
		content: "Password ";
	}
	.viewUsersTable td:nth-of-type(4):before {
		content: "First Name";
	}
	.viewUsersTable td:nth-of-type(5):before {
		content: "Last Name";
	}
	.viewUsersTable td:nth-of-type(6):before {
		content: "Email ";
	}
	.viewUsersTable td:nth-of-type(7):before {
		content: "Address ";
	}
	.viewUsersTable td:nth-of-type(8):before {
		content: "Phone No. ";
	}
	
	.viewGamesTable td:nth-of-type(1):before {
		content: "Game ID";
	}
	.viewGamesTable td:nth-of-type(2):before {
		content: "Game";
	}
	.viewGamesTable td:nth-of-type(3):before {
		content: "Creator ";
	}
	.viewGamesTable td:nth-of-type(4):before {
		content: "Genre";
	}
	.viewGamesTable td:nth-of-type(5):before {
		content: "Image URL";
	}
	.viewGamesTable td:nth-of-type(6):before {
		content: "Image URL1";
	}
	.viewGamesTable td:nth-of-type(7):before {
		content: "Platform Type";
	}
	.viewGamesTable td:nth-of-type(8):before {
		content: "Age Category";
	}
	.viewGamesTable td:nth-of-type(9):before {
		content: "Price";
	}
	.viewGamesTable td:nth-of-type(10):before {
		content: "Sale Price";
	}
	.viewGamesTable td:nth-of-type(11):before {
		content: "Home Flag";
	}

}
}
}